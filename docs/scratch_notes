ASK ABOUT:
__________________
-Getting stuff going in heroku
- Maps
  - can you make image clickable to scroll to it? / show modal?
- how to put do errors from backbone - handle errors from that (e.g. someone puts in nonsense) - how to put in errors div
- handle image cropping


HIGH PRIORITY:
__________________
-Notifications
  -Should be limited to your last 3 notifications
  -Need to get markNotificationsAsRead to work
- Cloudinary on edit profile
- Use bullet to get rid of extra queries
-Get Styling Going
  -better jquery on button press for following
  -Modal Background CSS
  -Rows for grid photos for user show
  -Make Info Window on map better
- PanToPost when created

LATER:
__________________
- Set timer: someone likes your photo 10 seconds after login

- Potentially allow people to turn panning off
- Edge Cases
  - Tall Image: stretches it
  - Small Image: ?
- prevent anyone from editing a user profile by going to the url (e.g., redirect unless logged in)
- add delete button for your comments
- When you go to a route (e.g., upload, make it active on nav)
- Make feed only for people you are subscribed to?


Clean up
__________________
- potenitally add validation to image.rb
Make schema.md reflect actual database
Clean up routes file
files to delete that may be making folder overweight
Remove login details
Remove store images on rails
Add below to set-up/readme
Fix links on readme
- add validation that user can only like a post one time at model level?
  - check edge case of liking from names to number
- cleaner center on grid photo hover
- potentially remove current user id from window

_______________
To add to set-up

View Structure

Post Index - nothing
Post - CompositeView
CommentIndex - subview / CompositeView
Comment Item - view

Post Show - CompositeView
header area view - view
Grid - view

Steps to create an image
  - show image - how can I do cropping?
  - Save a version of the image
  - create a userUpload route and a view
  - view will grab last image(from url in string) and display thumbnails of all filters
  - Make the url reference for each filter based on the dynamic part.
  - Have a form to add a caption and location.
  - Submit the form with the url of the active image.
  - create a post that belongs to the image
  - Re-render the index
