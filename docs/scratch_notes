HIGH PRIORITY:
__________________
-Notifications
  -Should be created when - liking, commenting or following happens
  -Should not happen if you like or comment on your own stuff
-Location Input
  -Read up on geocoder for location input

Modal Cleanup
-center modal item

-decide what to do if hover over a picture with no location

LATER:
__________________
- Make Info Window on map better
- Edge Cases
  - Tall Image: stretches it
  - Small Image: ?
- handle image cropping?
- Write User Edit File
- prevent anyone from editing a user profile by going to the url (e.g., redirect unless logged in)
- add delete button for your comments
- potentially remove current user id from window
- When you go to a route (e.g., upload, make it active on nav)
- Make feed only for people you are subscribed to?
- Check in on Heroku

ASK ABOUT:
__________________
- Maps
  -markers are gone / weird behavior when navigating back to a page
  -how to make clicking a marker also pan to it (tough set up)
  - How to fix map without screwing up CSS
  - Zombie maps?
Modal
-commenting from modal redirects you to index - tried a fix but its not great. Need help (line 70 - 80 on post index item js)
- Caching info so it doesn't have to query for every comment, username
- CSS on the form page for users/new - how to get form to space off top

Clean up
__________________
- potenitally add validation to image.rb
Make schema.md reflect actual database
Clean up routes file
files to delete that may be making folder overweight
Remove login details
Remove store images on rails
Add below to set-up/readme
Fix links on readme
- add validation that user can only like a post one time at model level?
  - check edge case of liking from names to number
- cleaner center on grid photo hover

_______________
To add to set-up

View Structure

Post Index - nothing
Post - CompositeView
CommentIndex - subview / CompositeView
Comment Item - view

Post Show - CompositeView
header area view - view
Grid - view

Steps to create an image
  - show image - how can I do cropping?
  - Save a version of the image
  - create a userUpload route and a view
  - view will grab last image(from url in string) and display thumbnails of all filters
  - Make the url reference for each filter based on the dynamic part.
  - Have a form to add a caption and location.
  - Submit the form with the url of the active image.
  - create a post that belongs to the image
  - Re-render the index
